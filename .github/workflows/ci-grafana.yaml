name: CI Build Grafana-OSS
on:
  push:
    branches: ['main']
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      attestations: read
    env:
      REGISTRY: ghcr.io
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Parse ARGs from Dockerfile
        id: prepare
        shell: bash
        run: |
          if [ ! -f "Dockerfile" ]; then
            echo "Error: No such file or directory"
            exit 1
          fi
          AL_VER=$(grep -E '^ARG AL_VER=' Dockerfile | head -n 1 | sed 's/^ARG AL_VER=\(.*\)/\1/')
          PD_VER=$(grep -E '^ARG PD_VER=' Dockerfile | head -n 1 | sed 's/^ARG PD_VER=\(.*\)/\1/')
          PD_NAME=$(grep -E '^ARG PD_NAME=' Dockerfile | head -n 1 | sed 's/^ARG PD_NAME=\(.*\)/\1/')
          # clean up values
          AL_VER=$(echo "$AL_VER" | sed 's/^[[:space:]"]*//;s/[[:space:]"]*$//')
          PD_VER=$(echo "$PD_VER" | sed 's/^[[:space:]"]*//;s/[[:space:]"]*$//')
          PD_NAME=$(echo "$PD_NAME" | sed 's/^[[:space:]"]*//;s/[[:space:]"]*$//')
          # check if values are empty
          if [ -z "$AL_VER" ] || [ -z "$PD_VER" ] || [ -z "$PD_NAME" ]; then
            echo "AL_VER='${AL_VER}'"
            echo "PD_VER='${PD_VER}'"
            echo "PD_NAME='${PD_NAME}'"
            exit 1
          fi
          # echo results
          echo "AL_VER='${AL_VER}'"
          echo "PD_VER='${PD_VER}'"
          echo "PD_NAME='${PD_NAME}'"
          # set outputs
          echo "al_ver=${AL_VER}" >> $GITHUB_OUTPUT
          echo "pd_ver=${PD_VER}" >> $GITHUB_OUTPUT
          echo "pd_name=${PD_NAME}" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and Push "grafana-oss"
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ steps.prepare.outputs.pd_name }}:${{ steps.prepare.outputs.pd_ver }}-alpine${{ steps.prepare.outputs.al_ver }}